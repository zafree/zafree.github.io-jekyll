.i-switch{
	position: relative;
  display: inline-block;
  width: @switch-width;
  height: @switch-height;
  border-radius: 30px;
  background-color: @brand-success;
  cursor: pointer;
	input{
		position: absolute;
		.opacity(0);
		&:checked{
			+ i{
        &:before{
          top: 50%;
          bottom: 50%;
          left: 50%;
          right: 5px;
          border-width: 0;
          border-radius: 5px;
        }
				&:after{
					margin-left: @switch-width - @switch-height + 1;
				}
			}
		}
	}
	i{
    &:before{
      content: "";
      position: absolute;
      top: -1px;
      bottom: -1px;
      left: -1px;
      right: -1px;
      background-color: #fff;
      border: 1px solid #f0f0f0;
      border-radius: 30px;
      .transition(all 0.2s);
    }
		&:after{
			content: "";
			position: absolute;
			background-color: #fff;
			width: @switch-height - 2;
			top: 1px;
			bottom: 1px;
			border-radius: 50%;
			.box-shadow(1px 1px 3px rgba(0, 0, 0, 0.25));
      .transition(margin-left 0.3s);
		}
	}
}

.i-switch_iClasses(@i:5) when(@i <= length(@array_px)) {
    @size: extract(extract(@array_px, @i),1);
    @px_width: ~"switch@{size}-width";
    @px_height: ~"switch@{size}-height";
    .i-switch@{size}{
      width: @@px_width;
      height: @@px_height;
      input{
        &:checked{
          + i{
            &:after{
              margin-left: @@px_width - @@px_height + 1;
            }
          }
        }
      }
      i{
        &:after{
          width: @@px_height - 2;
        }
      }
    }
    .i-switch_iClasses((@i + 1));
}
.i-switch_iClasses();


.i-checks{
  padding-left: 20px;
  cursor: pointer;
  input{
    opacity: 0;
    position: absolute;
    margin-left: -20px;
    &:checked + i{
      border-color: @brand-info;
      &:before{
        left: @checks-width / 4 - 1;
        top: @checks-height / 4 - 1;
        width: @checks-width / 2;
        height: @checks-height / 2;
        background-color: @brand-info;
      }
    }
    &:checked + span .active{
      display: inherit;
    }
    &[type="radio"] + i{
      &,
      &:before{
        border-radius: 50%;
      }      
    }
    &[type="checkbox"]:checked + i:before{
      
    }
    &[type="radio"]:checked + i:before{
      
    }
    &[disabled],
    fieldset[disabled] & {
      & + i{
        border-color: lighten(@border-color, 5%);
        &:before{
          background-color: lighten(@border-color, 5%);
        }
      }
    }
  }
  > i{
    width: @checks-width;
    height: @checks-height;
    line-height: 1;
    border: 1px solid @border-color;
    background-color: #fff;
    margin-left: -20px;
    margin-top: -2px;
    display: inline-block;
    vertical-align: middle;
    margin-right: 4px;
    position: relative;
    &:before{
      content:"";
      position: absolute;
      left: 50%;
      top: 50%;
      width: 0px;
      height: 0px;
      background-color: transparent;
      .transition(all 0.2s);
    }
  }
  > span{
    margin-left: -20px;
    .active{
      display: none;
    }
  }
}

.i-checks_iClasses(@i:5) when(@i <= length(@array_px)) {
    @size: extract(extract(@array_px, @i),1);
    @px_width: ~"checks@{size}-width";
    @px_height: ~"checks@{size}-height";
    .i-checks@{size}{
      input{
        &:checked + i{
          &:before{
            left: @@px_width / 4 - 1;
            top: @@px_height / 4 - 1;
            width: @@px_width / 2;
            height: @@px_height / 2;
          }
        }
      }
      > i{
        width: @@px_width;
        height: @@px_height;
      }
    }
    .i-checks_iClasses((@i + 1));
}
.i-checks_iClasses();


.i-check_colorClasses(@i:2) when(@i <= length(@array_brand)) {
    @brand-name: extract(extract(@array_brand, @i),1);
    @brand-color: e("brand-@{brand-name}");
    .checks-@{brand-name} { 
      input{ 
        &:checked + i{ 
          border-color: @@brand-color; 
          &:before{ 
            background-color: @@brand-color; 
          } 
        } 
      } 
    }
    .i-check_colorClasses((@i + 1));
}
.i-check_colorClasses();